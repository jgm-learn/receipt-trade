// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpcPB.proto

package grpcPB

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Request struct {
	UserAddr             string   `protobuf:"bytes,1,opt,name=UserAddr,proto3" json:"UserAddr,omitempty"`
	ReceiptId            int64    `protobuf:"varint,2,opt,name=ReceiptId,proto3" json:"ReceiptId,omitempty"`
	TotalQty             int64    `protobuf:"varint,3,opt,name=TotalQty,proto3" json:"TotalQty,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_07c2e5be8b017ffe, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetUserAddr() string {
	if m != nil {
		return m.UserAddr
	}
	return ""
}

func (m *Request) GetReceiptId() int64 {
	if m != nil {
		return m.ReceiptId
	}
	return 0
}

func (m *Request) GetTotalQty() int64 {
	if m != nil {
		return m.TotalQty
	}
	return 0
}

type Reply struct {
	Rst                  int64    `protobuf:"varint,1,opt,name=Rst,proto3" json:"Rst,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Reply) Reset()         { *m = Reply{} }
func (m *Reply) String() string { return proto.CompactTextString(m) }
func (*Reply) ProtoMessage()    {}
func (*Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_07c2e5be8b017ffe, []int{1}
}

func (m *Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reply.Unmarshal(m, b)
}
func (m *Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reply.Marshal(b, m, deterministic)
}
func (m *Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reply.Merge(m, src)
}
func (m *Reply) XXX_Size() int {
	return xxx_messageInfo_Reply.Size(m)
}
func (m *Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_Reply proto.InternalMessageInfo

func (m *Reply) GetRst() int64 {
	if m != nil {
		return m.Rst
	}
	return 0
}

func init() {
	proto.RegisterType((*Request)(nil), "grpcPB.Request")
	proto.RegisterType((*Reply)(nil), "grpcPB.Reply")
}

func init() { proto.RegisterFile("grpcPB.proto", fileDescriptor_07c2e5be8b017ffe) }

var fileDescriptor_07c2e5be8b017ffe = []byte{
	// 181 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0x2f, 0x2a, 0x48,
	0x0e, 0x70, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x83, 0xf0, 0x94, 0xe2, 0xb9, 0xd8,
	0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0xa4, 0xb8, 0x38, 0x42, 0x8b, 0x53, 0x8b, 0x1c,
	0x53, 0x52, 0x8a, 0x24, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0xe0, 0x7c, 0x21, 0x19, 0x2e, 0xce,
	0xa0, 0xd4, 0xe4, 0xd4, 0xcc, 0x82, 0x12, 0xcf, 0x14, 0x09, 0x26, 0x05, 0x46, 0x0d, 0xe6, 0x20,
	0x84, 0x00, 0x48, 0x67, 0x48, 0x7e, 0x49, 0x62, 0x4e, 0x60, 0x49, 0xa5, 0x04, 0x33, 0x58, 0x12,
	0xce, 0x57, 0x92, 0xe4, 0x62, 0x0d, 0x4a, 0x2d, 0xc8, 0xa9, 0x14, 0x12, 0xe0, 0x62, 0x0e, 0x2a,
	0x2e, 0x01, 0x9b, 0xcc, 0x1c, 0x04, 0x62, 0x1a, 0xd9, 0x73, 0x71, 0x05, 0x05, 0x38, 0x07, 0xa7,
	0x16, 0x95, 0x65, 0x26, 0xa7, 0x0a, 0x19, 0x72, 0xf1, 0x7a, 0xe6, 0x15, 0xa7, 0x16, 0x95, 0x40,
	0xcd, 0x15, 0xe2, 0xd7, 0x83, 0xba, 0x18, 0xea, 0x40, 0x29, 0x5e, 0x84, 0x40, 0x41, 0x4e, 0xa5,
	0x12, 0x43, 0x12, 0x1b, 0xd8, 0x2f, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0xca, 0x10, 0xb9,
	0xd2, 0xdb, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RPCServiceClient is the client API for RPCService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCServiceClient interface {
	InsertReceipt(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Reply, error)
}

type rPCServiceClient struct {
	cc *grpc.ClientConn
}

func NewRPCServiceClient(cc *grpc.ClientConn) RPCServiceClient {
	return &rPCServiceClient{cc}
}

func (c *rPCServiceClient) InsertReceipt(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/grpcPB.RPCService/InsertReceipt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCServiceServer is the server API for RPCService service.
type RPCServiceServer interface {
	InsertReceipt(context.Context, *Request) (*Reply, error)
}

func RegisterRPCServiceServer(s *grpc.Server, srv RPCServiceServer) {
	s.RegisterService(&_RPCService_serviceDesc, srv)
}

func _RPCService_InsertReceipt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServiceServer).InsertReceipt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcPB.RPCService/InsertReceipt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServiceServer).InsertReceipt(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpcPB.RPCService",
	HandlerType: (*RPCServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "InsertReceipt",
			Handler:    _RPCService_InsertReceipt_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpcPB.proto",
}
