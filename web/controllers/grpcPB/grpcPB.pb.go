// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpcPB.proto

package grpcPB

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type IstRctRequest struct {
	UserAddr             string   `protobuf:"bytes,1,opt,name=UserAddr,proto3" json:"UserAddr,omitempty"`
	ReceiptId            int64    `protobuf:"varint,2,opt,name=ReceiptId,proto3" json:"ReceiptId,omitempty"`
	TotalQty             int64    `protobuf:"varint,3,opt,name=TotalQty,proto3" json:"TotalQty,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IstRctRequest) Reset()         { *m = IstRctRequest{} }
func (m *IstRctRequest) String() string { return proto.CompactTextString(m) }
func (*IstRctRequest) ProtoMessage()    {}
func (*IstRctRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_07c2e5be8b017ffe, []int{0}
}

func (m *IstRctRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IstRctRequest.Unmarshal(m, b)
}
func (m *IstRctRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IstRctRequest.Marshal(b, m, deterministic)
}
func (m *IstRctRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IstRctRequest.Merge(m, src)
}
func (m *IstRctRequest) XXX_Size() int {
	return xxx_messageInfo_IstRctRequest.Size(m)
}
func (m *IstRctRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IstRctRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IstRctRequest proto.InternalMessageInfo

func (m *IstRctRequest) GetUserAddr() string {
	if m != nil {
		return m.UserAddr
	}
	return ""
}

func (m *IstRctRequest) GetReceiptId() int64 {
	if m != nil {
		return m.ReceiptId
	}
	return 0
}

func (m *IstRctRequest) GetTotalQty() int64 {
	if m != nil {
		return m.TotalQty
	}
	return 0
}

type IstFundsRequest struct {
	UserAddr             string   `protobuf:"bytes,1,opt,name=UserAddr,proto3" json:"UserAddr,omitempty"`
	TotalFunds           int64    `protobuf:"varint,2,opt,name=TotalFunds,proto3" json:"TotalFunds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IstFundsRequest) Reset()         { *m = IstFundsRequest{} }
func (m *IstFundsRequest) String() string { return proto.CompactTextString(m) }
func (*IstFundsRequest) ProtoMessage()    {}
func (*IstFundsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_07c2e5be8b017ffe, []int{1}
}

func (m *IstFundsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IstFundsRequest.Unmarshal(m, b)
}
func (m *IstFundsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IstFundsRequest.Marshal(b, m, deterministic)
}
func (m *IstFundsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IstFundsRequest.Merge(m, src)
}
func (m *IstFundsRequest) XXX_Size() int {
	return xxx_messageInfo_IstFundsRequest.Size(m)
}
func (m *IstFundsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IstFundsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IstFundsRequest proto.InternalMessageInfo

func (m *IstFundsRequest) GetUserAddr() string {
	if m != nil {
		return m.UserAddr
	}
	return ""
}

func (m *IstFundsRequest) GetTotalFunds() int64 {
	if m != nil {
		return m.TotalFunds
	}
	return 0
}

type TradeReq struct {
	ReceiptId            int64    `protobuf:"varint,1,opt,name=ReceiptId,proto3" json:"ReceiptId,omitempty"`
	Price                int64    `protobuf:"varint,2,opt,name=Price,proto3" json:"Price,omitempty"`
	QtySell              int64    `protobuf:"varint,3,opt,name=QtySell,proto3" json:"QtySell,omitempty"`
	NonceSell            int64    `protobuf:"varint,4,opt,name=NonceSell,proto3" json:"NonceSell,omitempty"`
	SigSell              string   `protobuf:"bytes,5,opt,name=SigSell,proto3" json:"SigSell,omitempty"`
	AddrSell             string   `protobuf:"bytes,6,opt,name=AddrSell,proto3" json:"AddrSell,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TradeReq) Reset()         { *m = TradeReq{} }
func (m *TradeReq) String() string { return proto.CompactTextString(m) }
func (*TradeReq) ProtoMessage()    {}
func (*TradeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_07c2e5be8b017ffe, []int{2}
}

func (m *TradeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradeReq.Unmarshal(m, b)
}
func (m *TradeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradeReq.Marshal(b, m, deterministic)
}
func (m *TradeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradeReq.Merge(m, src)
}
func (m *TradeReq) XXX_Size() int {
	return xxx_messageInfo_TradeReq.Size(m)
}
func (m *TradeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TradeReq.DiscardUnknown(m)
}

var xxx_messageInfo_TradeReq proto.InternalMessageInfo

func (m *TradeReq) GetReceiptId() int64 {
	if m != nil {
		return m.ReceiptId
	}
	return 0
}

func (m *TradeReq) GetPrice() int64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *TradeReq) GetQtySell() int64 {
	if m != nil {
		return m.QtySell
	}
	return 0
}

func (m *TradeReq) GetNonceSell() int64 {
	if m != nil {
		return m.NonceSell
	}
	return 0
}

func (m *TradeReq) GetSigSell() string {
	if m != nil {
		return m.SigSell
	}
	return ""
}

func (m *TradeReq) GetAddrSell() string {
	if m != nil {
		return m.AddrSell
	}
	return ""
}

type Reply struct {
	RstCode              int64    `protobuf:"varint,1,opt,name=RstCode,proto3" json:"RstCode,omitempty"`
	RstDetails           string   `protobuf:"bytes,2,opt,name=RstDetails,proto3" json:"RstDetails,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Reply) Reset()         { *m = Reply{} }
func (m *Reply) String() string { return proto.CompactTextString(m) }
func (*Reply) ProtoMessage()    {}
func (*Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_07c2e5be8b017ffe, []int{3}
}

func (m *Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reply.Unmarshal(m, b)
}
func (m *Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reply.Marshal(b, m, deterministic)
}
func (m *Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reply.Merge(m, src)
}
func (m *Reply) XXX_Size() int {
	return xxx_messageInfo_Reply.Size(m)
}
func (m *Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_Reply proto.InternalMessageInfo

func (m *Reply) GetRstCode() int64 {
	if m != nil {
		return m.RstCode
	}
	return 0
}

func (m *Reply) GetRstDetails() string {
	if m != nil {
		return m.RstDetails
	}
	return ""
}

func init() {
	proto.RegisterType((*IstRctRequest)(nil), "grpcPB.IstRctRequest")
	proto.RegisterType((*IstFundsRequest)(nil), "grpcPB.IstFundsRequest")
	proto.RegisterType((*TradeReq)(nil), "grpcPB.TradeReq")
	proto.RegisterType((*Reply)(nil), "grpcPB.Reply")
}

func init() { proto.RegisterFile("grpcPB.proto", fileDescriptor_07c2e5be8b017ffe) }

var fileDescriptor_07c2e5be8b017ffe = []byte{
	// 327 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0xc1, 0x4e, 0xc2, 0x40,
	0x10, 0x75, 0xc5, 0x22, 0x4c, 0x24, 0xe8, 0x46, 0x63, 0x43, 0x8c, 0x21, 0x3d, 0x11, 0x0f, 0x1c,
	0xf4, 0xc8, 0x09, 0x31, 0x26, 0x3d, 0x68, 0x60, 0xc1, 0x0f, 0xc0, 0xee, 0x84, 0x34, 0x69, 0x68,
	0xd9, 0x1d, 0x4c, 0xf8, 0x27, 0x4f, 0x7e, 0xa1, 0xd9, 0xed, 0x6e, 0x29, 0x72, 0xf1, 0xf8, 0xde,
	0xeb, 0x9b, 0x7d, 0x6f, 0xa6, 0x70, 0xb1, 0x52, 0x45, 0x32, 0x7d, 0x1e, 0x16, 0x2a, 0xa7, 0x9c,
	0x37, 0x4b, 0x14, 0x21, 0x74, 0x62, 0x4d, 0x22, 0x21, 0x81, 0x9b, 0x2d, 0x6a, 0xe2, 0x3d, 0x68,
	0x7d, 0x68, 0x54, 0x63, 0x29, 0x55, 0xc8, 0xfa, 0x6c, 0xd0, 0x16, 0x15, 0xe6, 0x77, 0xd0, 0x16,
	0x98, 0x60, 0x5a, 0x50, 0x2c, 0xc3, 0xd3, 0x3e, 0x1b, 0x34, 0xc4, 0x9e, 0x30, 0xce, 0x45, 0x4e,
	0xcb, 0x6c, 0x46, 0xbb, 0xb0, 0x61, 0xc5, 0x0a, 0x47, 0x6f, 0xd0, 0x8d, 0x35, 0xbd, 0x6e, 0xd7,
	0x52, 0xff, 0xe7, 0xa1, 0x7b, 0x00, 0x6b, 0xb5, 0x06, 0xf7, 0x52, 0x8d, 0x89, 0xbe, 0x19, 0xb4,
	0x16, 0x6a, 0x29, 0x51, 0xe0, 0xe6, 0x30, 0x15, 0xfb, 0x9b, 0xea, 0x1a, 0x82, 0xa9, 0x4a, 0x13,
	0x74, 0x53, 0x4a, 0xc0, 0x43, 0x38, 0x9f, 0xd1, 0x6e, 0x8e, 0x59, 0xe6, 0xa2, 0x7a, 0x68, 0xa6,
	0xbd, 0xe7, 0xeb, 0x04, 0xad, 0x76, 0x56, 0x4e, 0xab, 0x08, 0xe3, 0x9b, 0xa7, 0x2b, 0xab, 0x05,
	0x36, 0xb3, 0x87, 0xa6, 0x8e, 0x89, 0x6e, 0xa5, 0x66, 0x59, 0xc7, 0xe3, 0x68, 0x0c, 0x81, 0xc0,
	0x22, 0xdb, 0x19, 0xbb, 0xd0, 0x34, 0xc9, 0x25, 0xba, 0xa0, 0x1e, 0x9a, 0xc6, 0x42, 0xd3, 0x0b,
	0xd2, 0x32, 0xcd, 0xca, 0xc6, 0x6d, 0x51, 0x63, 0x1e, 0x7f, 0x18, 0x80, 0x98, 0x4e, 0xe6, 0xa8,
	0xbe, 0x4c, 0xfe, 0x11, 0x5c, 0xc5, 0x6b, 0x8d, 0x8a, 0xcc, 0xca, 0x5c, 0x59, 0x7e, 0x33, 0x74,
	0x27, 0x3e, 0xb8, 0x68, 0xaf, 0xe3, 0x69, 0x9b, 0x21, 0x3a, 0xe1, 0x23, 0xe8, 0xee, 0xcd, 0x76,
	0xa1, 0xfc, 0xb6, 0x66, 0xad, 0x5f, 0xe9, 0xd8, 0xfc, 0x00, 0x81, 0xdd, 0x3c, 0xbf, 0xf4, 0x8a,
	0x3f, 0xc4, 0xd1, 0xb7, 0x9f, 0x4d, 0xfb, 0xaf, 0x3d, 0xfd, 0x06, 0x00, 0x00, 0xff, 0xff, 0xac,
	0x45, 0xd4, 0x02, 0x7b, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RPCServiceClient is the client API for RPCService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCServiceClient interface {
	InsertUserReceipt(ctx context.Context, in *IstRctRequest, opts ...grpc.CallOption) (*Reply, error)
	InsertUserFunds(ctx context.Context, in *IstFundsRequest, opts ...grpc.CallOption) (*Reply, error)
	Trade(ctx context.Context, in *TradeReq, opts ...grpc.CallOption) (*Reply, error)
}

type rPCServiceClient struct {
	cc *grpc.ClientConn
}

func NewRPCServiceClient(cc *grpc.ClientConn) RPCServiceClient {
	return &rPCServiceClient{cc}
}

func (c *rPCServiceClient) InsertUserReceipt(ctx context.Context, in *IstRctRequest, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/grpcPB.RPCService/InsertUserReceipt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCServiceClient) InsertUserFunds(ctx context.Context, in *IstFundsRequest, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/grpcPB.RPCService/InsertUserFunds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCServiceClient) Trade(ctx context.Context, in *TradeReq, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/grpcPB.RPCService/Trade", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCServiceServer is the server API for RPCService service.
type RPCServiceServer interface {
	InsertUserReceipt(context.Context, *IstRctRequest) (*Reply, error)
	InsertUserFunds(context.Context, *IstFundsRequest) (*Reply, error)
	Trade(context.Context, *TradeReq) (*Reply, error)
}

func RegisterRPCServiceServer(s *grpc.Server, srv RPCServiceServer) {
	s.RegisterService(&_RPCService_serviceDesc, srv)
}

func _RPCService_InsertUserReceipt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IstRctRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServiceServer).InsertUserReceipt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcPB.RPCService/InsertUserReceipt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServiceServer).InsertUserReceipt(ctx, req.(*IstRctRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCService_InsertUserFunds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IstFundsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServiceServer).InsertUserFunds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcPB.RPCService/InsertUserFunds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServiceServer).InsertUserFunds(ctx, req.(*IstFundsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCService_Trade_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TradeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServiceServer).Trade(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcPB.RPCService/Trade",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServiceServer).Trade(ctx, req.(*TradeReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpcPB.RPCService",
	HandlerType: (*RPCServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "InsertUserReceipt",
			Handler:    _RPCService_InsertUserReceipt_Handler,
		},
		{
			MethodName: "InsertUserFunds",
			Handler:    _RPCService_InsertUserFunds_Handler,
		},
		{
			MethodName: "Trade",
			Handler:    _RPCService_Trade_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpcPB.proto",
}
